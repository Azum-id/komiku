import { fetchChapterData, fetchSearchResults } from "../models/mangaModel.js";
import { fetchMangaDetails } from "../models/mangaModel.js";
                                                                            export const getIndex = (req, res) => {
    res.render("index", {                                                           title: "Scraper Manga Komiku"
    });
};

export const getRead = async (req, res) => {
    const mangaUrl = req.query.url;

    if (!mangaUrl) {
        return res.redirect("/");
    }
    try {
        const { chapterInfo, images, nextChapter, prevChapter } = await fetchChapterData(mangaUrl);
        res.render("read", {
            chapterInfo,
            images,                                                                     nextChapter,
            prevChapter                                                             });
    } catch (error) {
        res.status(404).render("error", {message: error});
}
};


export const getDetails = async (req, res) => {
    const mangaUrl = req.query.url;

    if (!mangaUrl) {
        return res.redirect("/");
    }

    try {
        const manga = await fetchMangaDetails(mangaUrl);
        res.render("details", { manga });
    } catch (error) {
        res.status(404).render("error", { error });
    }
};

export const getMangaDetails = async (req, res) => {
    const mangaUrl = req.query.url;

    if (!mangaUrl) {
        return res.status(400).json({
            error: "Parameter 'url' wajib diisi.",
        });
    }

    try {
        const mangaDetails = await fetchMangaDetails(mangaUrl);
        res.json(mangaDetails);
    } catch (error) {
        res.status(500).json({
            error: error.message,
        });
    }
};

export const searchManga = async (req, res) => {
    const { query } = req.query;

    if (!query) {
        return res.status(400).json({                                                   error: "Parameter 'query' wajib diisi."
        });                                                                     }

    try {
        const results = await fetchSearchResults(query);
        res.json({
            query,
            results
        });
    } catch (error) {
        res.status(500).json({
            error: error.message
        });
    }
};
